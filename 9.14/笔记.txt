对象的创建方式
  工厂：属性值不同
        function 构造器名（形参）{  //形参就是原料
             var obj = new Object（）；  //obj就是罐子
             obj.属性名=形参；
             obj.方法名（）{}；

             return obj   //返回函数 成品罐头              

               }
  缺点：方法不能共享，没有new（使用构造器创建对象是不能加new）；
  改进工厂：
            function 构造器名（形参）{  //形参就是原料
            
             this.属性名=形参；
             this.方法名（）{}；

         
               }
有new了 即：var 对象名=new 构造器名（形参）
  原型：方法共享
  每个函数都有一个子对象（子属性） prototype 把变量或者函数放到prototype里面，通过这个构造器函数，创建的对象 都能够共享 里面的变量和函数。
  每个js{}对象都有一个私有属性（ie里私有)__proto__始终指向构造器函数的prototype
  混合：
                 function 构造器名（形参）{  //形参就是原料
            
                  this.属性名=形参；  //工厂模式创建属性
     
               }  构造器名.prototype.方法名=function（）{}；  //原型模式创建方法

实例化一个对象：




  